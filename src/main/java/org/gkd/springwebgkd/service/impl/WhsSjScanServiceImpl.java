/*
 * Created on 26 Jan 2016 ( Time 08:40:46 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.gkd.springwebgkd.service.impl;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import java.math.BigDecimal;

import org.gkd.springwebgkd.bean.WhsSjScan;
import org.gkd.springwebgkd.bean.jpa.WhsSjScanEntity;
import org.gkd.springwebgkd.repo.WhsSjScanRepository;
import org.gkd.springwebgkd.service.WhsSjScanService;
import org.gkd.springwebgkd.service.mapper.WhsSjScanServiceMapper;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of WhsSjScanService
 */
@Component
@Transactional
public class WhsSjScanServiceImpl implements WhsSjScanService {

	@Resource
	private WhsSjScanRepository whsSjScanRepository;

	@Resource
	private WhsSjScanServiceMapper whsSjScanServiceMapper;
	
	@Override
	public WhsSjScan findById(BigDecimal kdTrx) {
		WhsSjScanEntity entity = whsSjScanRepository.load(kdTrx);
		return whsSjScanServiceMapper.mapWhsSjScanEntityToWhsSjScan(entity);
	}

	@Override
	public List<WhsSjScan> findAll() {
		List<WhsSjScanEntity> entities = whsSjScanRepository.loadAll();
		List<WhsSjScan> beans = new ArrayList<WhsSjScan>();
		for(WhsSjScanEntity entity : entities) {
			beans.add(whsSjScanServiceMapper.mapWhsSjScanEntityToWhsSjScan(entity));
		}
		return beans;
	}

	@Override
	public WhsSjScan save(WhsSjScan whsSjScan) {
		return update(whsSjScan) ;
	}

	@Override
	public WhsSjScan create(WhsSjScan whsSjScan) {
		if(whsSjScanRepository.load(whsSjScan.getKdTrx()) != null) {
			throw new IllegalStateException("already.exists");
		}
		WhsSjScanEntity whsSjScanEntity = new WhsSjScanEntity();
		whsSjScanServiceMapper.mapWhsSjScanToWhsSjScanEntity(whsSjScan, whsSjScanEntity);
		WhsSjScanEntity whsSjScanEntitySaved = whsSjScanRepository.save(whsSjScanEntity);
		return whsSjScanServiceMapper.mapWhsSjScanEntityToWhsSjScan(whsSjScanEntitySaved);
	}

	@Override
	public WhsSjScan update(WhsSjScan whsSjScan) {
		WhsSjScanEntity whsSjScanEntity = whsSjScanRepository.load(whsSjScan.getKdTrx());
		whsSjScanServiceMapper.mapWhsSjScanToWhsSjScanEntity(whsSjScan, whsSjScanEntity);
		WhsSjScanEntity whsSjScanEntitySaved = whsSjScanRepository.save(whsSjScanEntity);
		return whsSjScanServiceMapper.mapWhsSjScanEntityToWhsSjScan(whsSjScanEntitySaved);
	}


	@Override
	public void delete(WhsSjScan whsSjScan, BigDecimal kdTrx) {
		WhsSjScanEntity whsSjScanEntity = whsSjScanRepository.load(kdTrx);
		whsSjScanServiceMapper.mapWhsSjScanToWhsSjScanEntity(whsSjScan, whsSjScanEntity);
		
		whsSjScanRepository.delete(whsSjScanEntity, kdTrx);
		
	}

	@Override
	public List<WhsSjScan> search(Map<String, Object> params) {
		List<WhsSjScanEntity> entities = whsSjScanRepository.search(params, "tglTrx desc", 10);
		List<WhsSjScan> beans = new ArrayList<WhsSjScan>();
		for(WhsSjScanEntity entity : entities) {
			beans.add(whsSjScanServiceMapper.mapWhsSjScanEntityToWhsSjScan(entity));
		}
		return beans;
	}

	@Override
	public BigDecimal getMaxId() {
		return whsSjScanRepository.findMaxKdTrx();
	}

	@Override
	public String openPeriodeBpb() {
		return whsSjScanRepository.openPeriodeBpb();
	}

	public WhsSjScanRepository getWhsSjScanRepository() {
		return whsSjScanRepository;
	}

	public void setWhsSjScanRepository(WhsSjScanRepository whsSjScanRepository) {
		this.whsSjScanRepository = whsSjScanRepository;
	}

	public WhsSjScanServiceMapper getWhsSjScanServiceMapper() {
		return whsSjScanServiceMapper;
	}

	public void setWhsSjScanServiceMapper(WhsSjScanServiceMapper whsSjScanServiceMapper) {
		this.whsSjScanServiceMapper = whsSjScanServiceMapper;
	}

}
