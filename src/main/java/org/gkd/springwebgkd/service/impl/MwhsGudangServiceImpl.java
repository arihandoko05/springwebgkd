/*
 * Created on 13 Jan 2016 ( Time 16:20:50 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.gkd.springwebgkd.service.impl;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.gkd.springwebgkd.bean.MwhsGudang;
import org.gkd.springwebgkd.bean.jpa.MwhsGudangEntity;
import org.gkd.springwebgkd.repo.MwhsGudangRepository;
import org.gkd.springwebgkd.service.MwhsGudangService;
import org.gkd.springwebgkd.service.mapper.MwhsGudangServiceMapper;
import org.springframework.stereotype.Component;

/**
 * Implementation of MwhsGudangService
 */
@Component
public class MwhsGudangServiceImpl implements MwhsGudangService {

	@Resource
	private MwhsGudangRepository mwhsGudangRepository;

	@Resource
	private MwhsGudangServiceMapper mwhsGudangServiceMapper;
	
		
	@Override
	public MwhsGudang findById(String kode) {
		MwhsGudangEntity entity = mwhsGudangRepository.load(kode);
		return mwhsGudangServiceMapper.mapMwhsGudangEntityToMwhsGudang(entity);
	}

	@Override
	public List<MwhsGudang> findAll() {
		List<MwhsGudangEntity> entities = mwhsGudangRepository.loadAll();
		List<MwhsGudang> beans = new ArrayList<MwhsGudang>();
		for(MwhsGudangEntity entity : entities) {
			beans.add(mwhsGudangServiceMapper.mapMwhsGudangEntityToMwhsGudang(entity));
		}
		return beans;
	}

	@Override
	public MwhsGudang save(MwhsGudang mwhsGudang) {
		return update(mwhsGudang) ;
	}

	@Override
	public MwhsGudang create(MwhsGudang mwhsGudang) {
		if(mwhsGudangRepository.load(mwhsGudang.getKode()) != null) {
			throw new IllegalStateException("already.exists");
		}
		MwhsGudangEntity mwhsGudangEntity = new MwhsGudangEntity();
		mwhsGudangServiceMapper.mapMwhsGudangToMwhsGudangEntity(mwhsGudang, mwhsGudangEntity);
		MwhsGudangEntity mwhsGudangEntitySaved = mwhsGudangRepository.save(mwhsGudangEntity);
		return mwhsGudangServiceMapper.mapMwhsGudangEntityToMwhsGudang(mwhsGudangEntitySaved);
	}

	@Override
	public MwhsGudang update(MwhsGudang mwhsGudang) {
		MwhsGudangEntity mwhsGudangEntity = mwhsGudangRepository.load(mwhsGudang.getKode());
		mwhsGudangServiceMapper.mapMwhsGudangToMwhsGudangEntity(mwhsGudang, mwhsGudangEntity);
		MwhsGudangEntity mwhsGudangEntitySaved = mwhsGudangRepository.save(mwhsGudangEntity);
		return mwhsGudangServiceMapper.mapMwhsGudangEntityToMwhsGudang(mwhsGudangEntitySaved);
	}

	@Override
	public void delete(MwhsGudang mwhsGudang, String kdTrx) {
		MwhsGudangEntity whsSupplyScanEntity = mwhsGudangRepository.load(mwhsGudang.getKode());
		mwhsGudangServiceMapper.mapMwhsGudangToMwhsGudangEntity(mwhsGudang, whsSupplyScanEntity);
		mwhsGudangRepository.delete(whsSupplyScanEntity, kdTrx);
	}

	public MwhsGudangRepository getMwhsGudangRepository() {
		return mwhsGudangRepository;
	}

	public void setMwhsGudangRepository(MwhsGudangRepository mwhsGudangRepository) {
		this.mwhsGudangRepository = mwhsGudangRepository;
	}

	public MwhsGudangServiceMapper getMwhsGudangServiceMapper() {
		return mwhsGudangServiceMapper;
	}

	public void setMwhsGudangServiceMapper(MwhsGudangServiceMapper mwhsGudangServiceMapper) {
		this.mwhsGudangServiceMapper = mwhsGudangServiceMapper;
	}

	@Override
	public List<MwhsGudang> search(Map<String, Object> params) {
		List<MwhsGudangEntity> entities = mwhsGudangRepository.search(params, "kode asc", 0);
		List<MwhsGudang> beans = new ArrayList<MwhsGudang>();
		for(MwhsGudangEntity entity : entities) {
			beans.add(mwhsGudangServiceMapper.mapMwhsGudangEntityToMwhsGudang(entity));
		}
		return beans;
	}

}
